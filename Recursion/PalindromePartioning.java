import java.util.ArrayList;
import java.util.List;

/*
 * Problem Statement: You are given a string s, partition it in such a way that every substring is a palindrome. 
 * Return all such palindromic partitions of s.

Note: A palindrome string is a string that reads the same backward as forward.

Examples:

Example 1:

Input: s = "aab"

Output: [ ["a","a","b"], ["aa","b"] ]	

Explanation: The first  answer is generated by  making three partitions. 
The second answer is generated by making two partitions.

Example 2:

Input: s = "aabb"

Output: [ ["a","a","b","b"], ["aa","bb"], ["a","a","bb"], ["aa","b","b"] ] 

 */

public class PalindromePartioning {

    public static void subsetPalindrome(int ind, String s, List<List<String>> ans, List<String> ds) {
        if(ind == s.length()){
            ans.add(new ArrayList<>(ds));
            return;
        }

        for(int i = ind; i < s.length(); i++) {
            String r = s.substring(ind, i + 1);
            if(isPalindrome(r)) {
                ds.add(r);
                subsetPalindrome(i + 1, s, ans, ds);
                ds.remove(ds.size() - 1);
            }
        }
    }

    public static List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        subsetPalindrome(0, s, ans, new ArrayList<>());
        return ans;
    }

    public static boolean isPalindrome(String s) {
        int n = s.length();
        int i = 0, j = n - 1;
        while(i < j) {
            if(s.charAt(i) != s.charAt(j)) {
                return false;
            }
            i++;
            j--;
        }
        return true;
    }

    public static void main(String[] args) {
        String s = "aab";
        List<List<String>> ans = partition(s);
        int n = ans.size();
        System.out.println("The Palindromic partitions are :-");
        System.out.print(" [ ");
        for (int i = 0; i < n; i++) {
            System.out.print("[ ");
            for (int j = 0; j < ans.get(i).size(); j++) {
                System.out.print(ans.get(i).get(j) + " ");
            }
            System.out.print("] ");
        }
        System.out.print("]");
    }
}
